#!/bin/bash

# This is a script to encrypt and decrypt a file specfically,
# a file to store 2FA recovery codes.
# This could be edited to be able to be used on any file, but I'm
# too lazy.

#cd_placeholder#

source $DOTFILES/bin/utils.sh

try_again()
{
    newline
    read -p "$bld    Do you want to try again? [y/N] " response
    case "$response" in
    [yY][eE][sS]|[yY])
        $DOTFILES/bin/recover.sh;;
    esac
}

if [[ -f "codes.txt" ]]; then
    newline
    printbarr "Encrypting$grn codes.txt"
    newline
    openssl enc -aes-256-cbc -salt -in codes.txt -out codes.txt.enc
    if [[ $? -eq 0 ]]; then
        rm codes.txt
    else
        printerr "Passwords don't match."
        try_again
    fi
elif [[ -f "codes.txt.enc" ]]; then
    newline
    printbarr "Decrypting$grn codes.txt.enc"
    newline
    openssl enc -aes-256-cbc -d -in codes.txt.enc -out codes.txt
    if [[ $? -eq 0 ]]; then
        rm codes.txt.enc

        nvim codes.txt && $DOTFILES/bin/recover.sh
    else
        rm codes.txt

        printerr "Wrong password."
        try_again
    fi
else
    touch codes.txt
    $DOTFILES/bin/recover.sh
fi

